version: "3.4"

networks:
  default:
    external:
      name: calc-net
    driver: overlay

services:
  zookeeper:
    image: zookeeper
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 10s

prometheus:
    image: prom/prometheus
    # restart: always
    user: root
    # ports:
    #   - target: 9090
    #     published: 9090
    #     mode: host
    volumes:
      - type: volume
        source: prometheus-volume
        target: /prometheus
        volume:
          nocopy: true
      - type: bind
        source: /tmp/metrics-targets
        target: /tmp/metrics-targets
        read_only: true
    configs:
      - source: prometheus-config
        target: /etc/prometheus/prometheus.yml
      - source: alert-config
        target: /etc/prometheus/alertrules.yml   
    deploy:
      placement:
        constraints:
          - "node.labels.stack==monitoring"
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 10s
    depends_on:
      - zookeeper
      
  loki:
    image: grafana/loki:1.6.0
    #transfer of logs to loki over overlay
    #ports:
      # - target: 3100
      #   published: 3100
      #   mode: host
    user: root
    volumes:
      - type: volume
        source: loki-volume
        target: /data/loki
        volume:
          nocopy: true
    configs: 
      - source: loki-config
        target:  /usr/share/loki-conf/loki-config.yml
    command: -config.file=/usr/share/loki-conf/loki-config.yml
    deploy:
      placement:
        constraints:
          - "node.labels.stack==monitoring"
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 10s


  grafana:
    image: abhiurn/grafana:latest
    user: root
    ports:
      - target: 3000
        published: 3000
        mode: host
    volumes:
      - type: volume
        source: grafana-volume
        target: /var/lib/grafana
        volume:
          nocopy: true
    secrets:
      - grafana_admin_passwd
      - grafana_server_cert.pem
      - grafana_server_key.pem
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/grafana_admin_passwd
      - GF_PATHS_CONFIG=/usr/share/grafana-conf/custom.ini
      - GF_PATHS_DATA=/var/lib/grafana 
      - GF_PATHS_PROVISIONING=/usr/share/grafana-conf/provisioning
    configs:
      - source: grafana-config
        target: /usr/share/grafana-conf/custom.ini
      - source: dashboards-config
        target: /usr/share/grafana-conf/provisioning/dashboards/config.yml
      - source: datasources-config
        target: /usr/share/grafana-conf/provisioning/datasources/config.yml
    deploy:
      replicas: 1
      placement:
        constraints:
          - "node.labels.stack==monitoring"
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 10s
        
    depends_on:
      - prometheus
      - loki
  
  promtail:
    image: abhiurn/promtail:1.6.0
    user: root
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 10s
    configs:
    - source: promtail-config 
      target: /usr/share/promtail-conf/promtail-config.yml
    volumes:
      - type: bind
        source: /var/log/  #this is to store postions.yml
        target: /var/log/
      - type: bind
        source: /var/lib/docker/containers/ # all conatiner logs
        target: /var/lib/docker/containers/
        read_only: true
    environment:
      - NODE_HOSTNAME={{.Node.Hostname}}
      
volumes:
  prometheus-volume:
  grafana-volume:
  loki-volume:

configs:
  loki-config:
    file: loki/conf/loki-config.yml
  grafana-config:
    file:  grafana/conf/custom.ini
  dashboards-config:
    file:  grafana/conf/provisioning/dashboards/config.yml
  datasources-config:
    file: grafana/conf/provisioning/datasources/config.yml
  promtail-config:
    file:  promtail/conf/promtail-local-config.yml  
  promtail-run-config:
    file: promtail/run.sh
  alert-config:
    file:  prometheus/conf/alertrules.yml
  prometheus-config:
    file:  prometheus/conf/prometheus.yml

secrets:
  grafana_admin_passwd:
    external: true
  grafana_server_cert.pem:
    external: true  
  grafana_server_key.pem:
    external: true
  
    
